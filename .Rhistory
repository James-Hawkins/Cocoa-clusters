ghg.ab.dat[ghg.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.95pci' ]))
ghg.row.count %+=% 1
}
comp$lc.n2o.syn
# VOP uncertainty
for (cat in rev.catg){
# var <-  var.names[ var.names == cat ]
if (cat == rev.catg[1]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.cc' }
if (cat == rev.catg[2]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.fuelw' }
if (cat == rev.catg[3]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.hardw' }
if (cat == rev.catg[4]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ann.crop' }
if (cat == rev.catg[5]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.frt' }
if (cat == rev.catg[6]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ag.cmd' }
# vr <- var.names[]
#   print(paste(var))
vop.dat[vop.row.count, 'Revenue.category'] <-  cat
vop.dat[vop.row.count, 'Typology' ] <- t1
vop.dat[vop.row.count, 'Type' ] <- t2
vop.dat[vop.row.count, 'Type.str' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str' ] )
vop.dat[vop.row.count, 'Type.str.fill' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str.fill' ] )
vop.dat[vop.row.count, 'value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
vop.dat[vop.row.count, 'value.sd' ] <-  sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
# Aggregated values
vop.dat[vop.row.count, 'tot.value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.var' ] <- sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.sd' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.sd']))
vop.dat[vop.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.95pci']))
vop.row.count %+=% 1
}
}
}
ghg.ab.dat$Emission.category
#Absolute GHG data
ghg.ab.dat.var.names <- c ('Typology',
'Type',
'Type.str' ,
'Emission.category',
'value.mn',
'value.sd',
'tot.value.mn',
'tot.value.var',
'tot.value.sd',
'tot.value.95pci')
emis.catg <- c('N2O syn',
'N2O cocoa litter',
'N2O shade litter',
'N2O intercrop litter',
'N2O other',
'CO2 seqn. shade',
'CO2 seqn. cocoa',
'CO2 seqn. fruit',
'CO2 seqn. other')
emis.catg <- c(
'N2O syn',
'N2O organic',
'CO2 seqn. shade',
'CO2 seqn. cocoa',
'CO2 seqn. fruit',
'CO2 seqn. other'
)
rows <- seq( 1 : (3*5*length(emis.catg)) )
ghg.ab.dat <- data.frame(  matrix(ncol = length(ghg.ab.dat.var.names) , nrow = length(rows) , dimnames=list(rows  , ghg.ab.dat.var.names )))
#VOP prep
# Value of production
vop.dat.var.names <- c ('Typology',
'Type',
'Type.str' ,
'Revenue category',
'value.mn',
'value.sd',
'tot.value.mn',
'tot.value.var',
'tot.value.sd',
'tot.value.95pci')
rev.catg <- c('Cocoa',
'Fuelwood',
'Hardwood lumber',
'Annual crops',
'Fruit trees',
'Agrocommodity coproducts')
rows <- seq(1:(3*5*length(rev.catg )))
vop.dat <- data.frame(  matrix(ncol = length(vop.dat.var.names) , nrow = length(rows) , dimnames=list(rows  , vop.dat.var.names )))
var.names <- c('lc.net.VOP.1000.usd.per.ha.frac.rev.basis.cc',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.fuelw',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.hardw',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ann.crop',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.frt',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ag.cmd'
)
ghg.row.count <- 1
vop.row.count <- 1
for (t1 in  typologies) {
for (t2 in 1:5){
if (typ.uncertainty == 1) {
ids.to.include <- comp[comp$typ == t2 & comp$typology == t1 & !is.na(comp$typology) & !is.na(comp$typ) , 'hhID']
uncert.analysis(comp,ids.to.include)
}
# Absolute GHG emission uncertainty
for (cat in emis.catg){
#  var <-  ghg.ab.dat.var.names[ ghg.ab.dat.var.names == cat ]
if (cat == emis.catg[1] ) {var <- 'lc.N2O.synthetic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[2] ) {var <- 'lc.N2O.organic.shadet.resd.total.Mg.CO2eq.pe'   }
if (cat == emis.catg[3] ) {var <- 'lc.N2O.organic.resd.total.Mg.CO2eq.pe'}
if (cat == emis.catg[4] ) {var <- 'lc.N2O.organic.inter.resd.total.Mg.CO2eq.pe' }
if (cat == emis.catg[5] ) {var <- 'lc.N2O.organic.other.total.Mg.CO2eq.pe' }
if (cat == emis.catg[6] ) {var <- 'lc.Biomass.CO2.remv.cc.shade.total.Mg.ha.yr.pe'  }
# if (cat == emis.catg[7] ) {var <- 'lc.Biomass.CO2.remv.cc.cocoa.total.Mg.ha.yr.pe' }
#  if (cat == emis.catg[8] ) {var <- 'lc.Biomass.CO2.remv.cc.fruit.total.Mg.ha.yr.pe' }
# if (cat == emis.catg[9] ) {var <- 'lc.Biomass.CO2.remv.cc.interc.total.Mg.ha.yr.pe' }
if (cat == emis.catg[1] ) {var <- 'lc.N2O.synthetic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[2] ) {var <- 'lc.N2O.organic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[3] ) {var <- 'lc.Biomass.CO2.remv.cc.shade.total.Mg.ha.yr.pe'  }
if (cat == emis.catg[4] ) {var <- 'lc.Biomass.CO2.remv.cc.cocoa.total.Mg.ha.yr.pe' }
if (cat == emis.catg[5] ) {var <- 'lc.Biomass.CO2.remv.cc.fruit.total.Mg.ha.yr.pe' }
if (cat == emis.catg[6] ) {var <- 'lc.Biomass.CO2.remv.cc.interc.total.Mg.ha.yr.pe' }
# vr <- var.names[]
#   print(paste(var))
ghg.ab.dat[ghg.row.count, 'Emission.category'] <-  cat
ghg.ab.dat[ghg.row.count, 'Typology' ] <- t1
ghg.ab.dat[ghg.row.count, 'Type' ] <- t2
ghg.ab.dat[ghg.row.count, 'Type.str' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str' ] )
ghg.ab.dat[ghg.row.count, 'Type.str.fill' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str.fill' ] )
ghg.ab.dat[ghg.row.count, 'value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
ghg.ab.dat[ghg.row.count, 'value.sd' ] <-  sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
#  Aggregated values
ghg.ab.dat[ghg.row.count, 'tot.value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.pe' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.var' ] <- sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.sd' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.sd' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.95pci' ]))
ghg.row.count %+=% 1
}
comp$lc.n2o.syn
# VOP uncertainty
for (cat in rev.catg){
# var <-  var.names[ var.names == cat ]
if (cat == rev.catg[1]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.cc' }
if (cat == rev.catg[2]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.fuelw' }
if (cat == rev.catg[3]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.hardw' }
if (cat == rev.catg[4]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ann.crop' }
if (cat == rev.catg[5]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.frt' }
if (cat == rev.catg[6]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ag.cmd' }
# vr <- var.names[]
#   print(paste(var))
vop.dat[vop.row.count, 'Revenue.category'] <-  cat
vop.dat[vop.row.count, 'Typology' ] <- t1
vop.dat[vop.row.count, 'Type' ] <- t2
vop.dat[vop.row.count, 'Type.str' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str' ] )
vop.dat[vop.row.count, 'Type.str.fill' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str.fill' ] )
vop.dat[vop.row.count, 'value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
vop.dat[vop.row.count, 'value.sd' ] <-  sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
# Aggregated values
vop.dat[vop.row.count, 'tot.value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.var' ] <- sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.sd' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.sd']))
vop.dat[vop.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.95pci']))
vop.row.count %+=% 1
}
}
}
ghg.ab.dat$Emission.category
ordered.ab.emission.categories <<- c(  'CO2 seqn. other',
'CO2 seqn. fruit',
'CO2 seqn. cocoa',
'CO2 seqn. shade',
'N2O cocoa litter',
'N2O shade litter',
'N2O intercrop litter',
'N2O organic',
'N2O syn' )
ghg.ab.dat$Emission.category <- factor( ghg.ab.dat$Emission.category   ,  ordered.ab.emission.categories)
ghg.ab.dat[,'Type.str'] <- factor(  ghg.ab.dat[,'Type.str'], levels = ordered.typ)
ghg.ab.dat <<-  ghg.ab.dat
vop.dat$Typology <- factor( vop.dat$Typology   , levels= ordered.typologies)
ordered.revenue.categories <<- c('Cocoa'
, 'Fruit trees' ,
'Annual crops',
'Agrocommodity coproducts',
'Fuelwood',
'Hardwood lumber')
vop.dat$Revenue.category <- factor( vop.dat$Revenue.category   , ordered.revenue.categories)
vop.dat[,'Type.str'] <- factor(  vop.dat[,'Type.str'], levels = ordered.typ)
vop.dat <<-  vop.dat
fig.settings <- function(){
bar.chart.border.color <<- 'black'
bar.chart.border.thickness <<- 0.049735
fig.ghg.leg.x.coord  <<- 0.19
fig.ghg.leg.y.coord <<-  0.3
fig.vop.leg.x.coord <<- 0.19
fig.vop.leg.y.coord <<- 0.7
bar.width <<- 0.65
bar.color <<- '#9aabbc'
bar.color.border <<- 'black'
box.plot.color <<- "#000000"
fig.yd.bp.thickness <<- 0.12
fig.yd.bp.fatten <<- 1.4
box.plot.fill.color <<- "#a9a9a9"
# bar.widths
error.bar.width <<- 0.225
error.bar.size <<- 0.25
error.bar.color <<- '#3f5265'  #353839' #   '#fc6c85'
nvp.error.bar.color <<-  error.bar.color
point.color.fill <<- 'black'
point.color.border <<- error.bar.color
point.type <<- '-'
point.size <<- 3
y.tick.fs <<- 8.5
x.tick.fs <<- 8.0
y.tit.sz <<- 9.5
facet.tx.size <<- 10
x.tick.angle <<- 270.0
label.fs <<- 11.5
p.mg.left <<- 0.7
p.mg.right <<- 0.2
p.mg.top <<- 0.2
p.mg.bottom <<- 0.2
fig.ghg.y.lim.max <<- 1
fig.ghg.y.lim.min <<- -14
intrag.leg.key.h.ghg <<- 0.36
intrag.leg.key.w.ghg <<- 0.36
intrag.leg.key.h.vop <<- 0.36
intrag.leg.key.w.vop <<- 0.36
intrag.leg.space.x.ghg <<- 0.6
intrag.leg.space.y.ghg <<- 0.175
intrag.leg.space.x.vop <<-  intrag.leg.space.x.ghg
intrag.leg.space.y.vop <<- intrag.leg.space.y.ghg
intrag.fig.ghg.leg.text.fs <<- 8.5
intrag.fig.vop.leg.text.fs <<- 8.5
# Variable ranges
min.x.intrag.ghgr.int <<- 1.15 * min(na.omit(comp$typ.mn.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated) - na.omit(comp$typ.sd.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated))
max.x.intrag.ghgr.int <<- 1.15 * (max(na.omit(comp$typ.mn.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated)) + max(na.omit(comp$typ.sd.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated)))
min.x.intrag.ghgr.int <<- 1.15 * (min(na.omit(comp$typ.mn.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated)) - min(na.omit(comp$typ.sd.lc.GHG.remv.cc.kg.CO2eq.kg.econ.allocated)))
# GHG Figures
labels_emis_srcs <<- c( bquote('Annual crop '*CO[2]*''),
bquote('Fruit tree '*CO[2]*''),
bquote('Cocoa tree '*CO[2]*''),
bquote('Shade tree '*CO[2]*''),
# bquote('Cocoa tree biomass '*N[2]*'O'),
# bquote('Shade tree biomass '*N[2]*'O'),
#  bquote('Other tree/crop '*N[2]*'O'),
#   bquote('External organic '*N[2]*'O'),
#   bquote('Mineral fertiliser '*N[2]*'O') )
bquote('Total synthetic '*N[2]*'O'),
bquote('Total organic  '*N[2]*'O')
#    bquote('Synthetic fertiliser '*N[2]*'O') ,
#    bquote('Cocoa tree biomass '*N[2]*'O'),
#  bquote('Shade tree biomass '*N[2]*'O'),
# bquote('Other tree/crop '*N[2]*'O'),
#  bquote('Other organic '*N[2]*'O')
#   )
)
colors_emis_srcs <<- c( '#82E0AA' ,# interc
'#2ECC71' , # fruit
'#239B56' ,   # cocoa
'#196F3D' , # shade
'#F5B041',  # organic
'#CA6F1E'  # synth
)
# VOP figure
labels_rev_srcs <<-  ordered.revenue.categories
colors_rev_srcs <<-  c('#cd754c' ,
'#9acd32',
'#fdee00',
'#ff8c00',
'#c19a6b' ,
'#826644'  )
}
fig.settings()
fig.barintrag.ghgr.t <- ggplot( data = ghg.ab.dat )  +
geom_bar(aes(y = value.mn  , x = Type.str.fill , fill = Emission.category) , position="stack", stat="identity" , width = bar.width , colour=bar.chart.border.color , size=bar.chart.border.thickness)+
geom_point(aes(y = tot.value.mn    , x = Type.str.fill),stat = "identity",  shape=point.type, size= point.size , color = point.color.border , fill=point.color.fill )  +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Type.str.fill) , width= error.bar.width , size = error.bar.size , color = error.bar.color
) +
scale_fill_manual(labels = labels_emis_srcs  , values = colors_emis_srcs ) +
xlab('')  +
ylab(bquote('Net GHG emissions (Mg  '*CO[2]*'eq '*ha^-1*' '*yr^-1*')'))  +
facet_wrap( Typology ~ . , ncol = 3, nrow = 1 , scales = "free_x")   +
scale_y_continuous(
limits = c( fig.ghg.y.lim.min , fig.ghg.y.lim.max) ,breaks = seq(-14.0, 2.0, by = 2),
labels = scales::number_format(accuracy = 0.1))  +
# guides(fill = guide_legend(override.aes = list(colour = "gray", size = .392*2)))+
#guides(fill = guide_legend(bycol = TRUE))+
guides(fill = guide_legend(byrow = TRUE))+
theme(
# Margin
plot.margin = unit(c(p.mg.top,p.mg.right, p.mg.bottom ,p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.5, size = x.tick.fs),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
# Legend
legend.key.height = unit(intrag.leg.key.h.ghg, 'cm'),
legend.key.width = unit(intrag.leg.key.w.ghg, 'cm'),
legend.spacing.y = unit(intrag.leg.space.y.ghg, 'cm'),
legend.spacing.x = unit(intrag.leg.space.x.ghg, 'cm'),
#legend.position = "bottom",
legend.position = c(fig.ghg.leg.x.coord , fig.ghg.leg.y.coord),
legend.margin = margin(.00005,.00005,.00005,0.00005),
legend.box.margin = margin(.00005,.00005,.00005,.00005),
legend.title = element_blank(),
legend.text = element_text(intrag.fig.ghg.leg.text.fs),
axis.title.y = element_text(size =  y.tit.sz, face = "plain"),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
# Panel
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(colour = "black",
fill=NA, size=1))
fig.barintrag.ghgr.t
fig.intrag.dt.prep.old <- function(){
#Absolute GHG data
ghg.ab.dat.var.names <- c ('Typology',
'Type',
'Type.str' ,
'Emission.category',
'value.mn',
'value.sd',
'tot.value.mn',
'tot.value.var',
'tot.value.sd',
'tot.value.95pci')
emis.catg <- c('N2O syn',
'N2O cocoa litter',
'N2O shade litter',
'N2O intercrop litter',
'N2O other',
'CO2 seqn. shade',
'CO2 seqn. cocoa',
'CO2 seqn. fruit',
'CO2 seqn. other')
emis.catg <- c(
'N2O syn',
'N2O organic',
'CO2 seqn. shade',
'CO2 seqn. cocoa',
'CO2 seqn. fruit',
'CO2 seqn. other'
)
rows <- seq( 1 : (3*5*length(emis.catg)) )
ghg.ab.dat <- data.frame(  matrix(ncol = length(ghg.ab.dat.var.names) , nrow = length(rows) , dimnames=list(rows  , ghg.ab.dat.var.names )))
#VOP prep
# Value of production
vop.dat.var.names <- c ('Typology',
'Type',
'Type.str' ,
'Revenue category',
'value.mn',
'value.sd',
'tot.value.mn',
'tot.value.var',
'tot.value.sd',
'tot.value.95pci')
rev.catg <- c('Cocoa',
'Fuelwood',
'Hardwood lumber',
'Annual crops',
'Fruit trees',
'Agrocommodity coproducts')
rows <- seq(1:(3*5*length(rev.catg )))
vop.dat <- data.frame(  matrix(ncol = length(vop.dat.var.names) , nrow = length(rows) , dimnames=list(rows  , vop.dat.var.names )))
var.names <- c('lc.net.VOP.1000.usd.per.ha.frac.rev.basis.cc',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.fuelw',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.hardw',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ann.crop',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.frt',
'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ag.cmd'
)
ghg.row.count <- 1
vop.row.count <- 1
for (t1 in  typologies) {
for (t2 in 1:5){
if (typ.uncertainty == 1) {
ids.to.include <- comp[comp$typ == t2 & comp$typology == t1 & !is.na(comp$typology) & !is.na(comp$typ) , 'hhID']
uncert.analysis(comp,ids.to.include)
}
# Absolute GHG emission uncertainty
for (cat in emis.catg){
#  var <-  ghg.ab.dat.var.names[ ghg.ab.dat.var.names == cat ]
if (cat == emis.catg[1] ) {var <- 'lc.N2O.synthetic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[2] ) {var <- 'lc.N2O.organic.shadet.resd.total.Mg.CO2eq.pe'   }
if (cat == emis.catg[3] ) {var <- 'lc.N2O.organic.resd.total.Mg.CO2eq.pe'}
if (cat == emis.catg[4] ) {var <- 'lc.N2O.organic.inter.resd.total.Mg.CO2eq.pe' }
if (cat == emis.catg[5] ) {var <- 'lc.N2O.organic.other.total.Mg.CO2eq.pe' }
if (cat == emis.catg[6] ) {var <- 'lc.Biomass.CO2.remv.cc.shade.total.Mg.ha.yr.pe'  }
# if (cat == emis.catg[7] ) {var <- 'lc.Biomass.CO2.remv.cc.cocoa.total.Mg.ha.yr.pe' }
#  if (cat == emis.catg[8] ) {var <- 'lc.Biomass.CO2.remv.cc.fruit.total.Mg.ha.yr.pe' }
# if (cat == emis.catg[9] ) {var <- 'lc.Biomass.CO2.remv.cc.interc.total.Mg.ha.yr.pe' }
if (cat == emis.catg[1] ) {var <- 'lc.N2O.synthetic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[2] ) {var <- 'lc.N2O.organic.total.Mg.CO2eq.pe' }
if (cat == emis.catg[3] ) {var <- 'lc.Biomass.CO2.remv.cc.shade.total.Mg.ha.yr.pe'  }
if (cat == emis.catg[4] ) {var <- 'lc.Biomass.CO2.remv.cc.cocoa.total.Mg.ha.yr.pe' }
if (cat == emis.catg[5] ) {var <- 'lc.Biomass.CO2.remv.cc.fruit.total.Mg.ha.yr.pe' }
if (cat == emis.catg[6] ) {var <- 'lc.Biomass.CO2.remv.cc.interc.total.Mg.ha.yr.pe' }
# vr <- var.names[]
#   print(paste(var))
ghg.ab.dat[ghg.row.count, 'Emission.category'] <-  cat
ghg.ab.dat[ghg.row.count, 'Typology' ] <- t1
ghg.ab.dat[ghg.row.count, 'Type' ] <- t2
ghg.ab.dat[ghg.row.count, 'Type.str' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str' ] )
ghg.ab.dat[ghg.row.count, 'Type.str.fill' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str.fill' ] )
ghg.ab.dat[ghg.row.count, 'value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
ghg.ab.dat[ghg.row.count, 'value.sd' ] <-  sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
#  Aggregated values
ghg.ab.dat[ghg.row.count, 'tot.value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.pe' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.var' ] <- sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.sd' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.sd' ]))
ghg.ab.dat[ghg.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.GHG.remv.cc.Mg.CO2eq.ha.yr.95pci' ]))
ghg.row.count %+=% 1
}
comp$lc.n2o.syn
# VOP uncertainty
for (cat in rev.catg){
# var <-  var.names[ var.names == cat ]
if (cat == rev.catg[1]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.cc' }
if (cat == rev.catg[2]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.fuelw' }
if (cat == rev.catg[3]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.hardw' }
if (cat == rev.catg[4]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ann.crop' }
if (cat == rev.catg[5]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.frt' }
if (cat == rev.catg[6]) {var <- 'lc.net.VOP.1000.usd.per.ha.frac.rev.basis.ag.cmd' }
# vr <- var.names[]
#   print(paste(var))
vop.dat[vop.row.count, 'Revenue.category'] <-  cat
vop.dat[vop.row.count, 'Typology' ] <- t1
vop.dat[vop.row.count, 'Type' ] <- t2
vop.dat[vop.row.count, 'Type.str' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str' ] )
vop.dat[vop.row.count, 'Type.str.fill' ] <- unique(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'typ.str.fill' ] )
vop.dat[vop.row.count, 'value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
vop.dat[vop.row.count, 'value.sd' ] <-  sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , var]))
# Aggregated values
vop.dat[vop.row.count, 'tot.value.mn' ] <- mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.var' ] <- sd(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha']))
vop.dat[vop.row.count, 'tot.value.sd' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.sd']))
vop.dat[vop.row.count, 'tot.value.95pci' ] <-  mean(na.omit(comp[comp$typology ==  t1 & comp$typ == t2  & !is.na(comp$typology) & !is.na(comp$typ) , 'lc.net.VOP.1000.usd.per.ha.95pci']))
vop.row.count %+=% 1
}
}
}
#  ghg.ab.dat <<- ghg.ab.dat
# vop.dat <<- vop.dat
# Factor specification
#   Absolute GHG
ghg.ab.dat$Typology <- factor( ghg.ab.dat$Typology   , levels= ordered.typologies)
ordered.ab.emission.categories <<- c(  'CO2 seqn. other',
'CO2 seqn. fruit',
'CO2 seqn. cocoa',
'CO2 seqn. shade',
'N2O cocoa litter',
'N2O shade litter',
'N2O intercrop litter',
'N2O organic',
'N2O syn' )
ghg.ab.dat$Emission.category <- factor( ghg.ab.dat$Emission.category   ,  ordered.ab.emission.categories)
ghg.ab.dat[,'Type.str'] <- factor(  ghg.ab.dat[,'Type.str'], levels = ordered.typ)
ghg.ab.dat <<-  ghg.ab.dat
# VOP
vop.dat$Typology <- factor( vop.dat$Typology   , levels= ordered.typologies)
ordered.revenue.categories <<- c('Cocoa'
, 'Fruit trees' ,
'Annual crops',
'Agrocommodity coproducts',
'Fuelwood',
'Hardwood lumber')
vop.dat$Revenue.category <- factor( vop.dat$Revenue.category   , ordered.revenue.categories)
vop.dat[,'Type.str'] <- factor(  vop.dat[,'Type.str'], levels = ordered.typ)
vop.dat <<-  vop.dat
# View(ghg.ab.dat)
}
fig.intrag.dt.prep.old()
fig.barintrag.ghgr.t <- ggplot( data = ghg.ab.dat )  +
geom_bar(aes(y = value.mn  , x = Type.str.fill , fill = Emission.category) , position="stack", stat="identity" , width = bar.width , colour=bar.chart.border.color , size=bar.chart.border.thickness)+
geom_point(aes(y = tot.value.mn    , x = Type.str.fill),stat = "identity",  shape=point.type, size= point.size , color = point.color.border , fill=point.color.fill )  +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Type.str.fill) , width= error.bar.width , size = error.bar.size , color = error.bar.color
) +
scale_fill_manual(labels = labels_emis_srcs  , values = colors_emis_srcs ) +
xlab('')  +
ylab(bquote('Net GHG emissions (Mg  '*CO[2]*'eq '*ha^-1*' '*yr^-1*')'))  +
facet_wrap( Typology ~ . , ncol = 3, nrow = 1 , scales = "free_x")   +
scale_y_continuous(
limits = c( fig.ghg.y.lim.min , fig.ghg.y.lim.max) ,breaks = seq(-14.0, 2.0, by = 2),
labels = scales::number_format(accuracy = 0.1))  +
# guides(fill = guide_legend(override.aes = list(colour = "gray", size = .392*2)))+
#guides(fill = guide_legend(bycol = TRUE))+
guides(fill = guide_legend(byrow = TRUE))+
theme(
# Margin
plot.margin = unit(c(p.mg.top,p.mg.right, p.mg.bottom ,p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.5, size = x.tick.fs),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
# Legend
legend.key.height = unit(intrag.leg.key.h.ghg, 'cm'),
legend.key.width = unit(intrag.leg.key.w.ghg, 'cm'),
legend.spacing.y = unit(intrag.leg.space.y.ghg, 'cm'),
legend.spacing.x = unit(intrag.leg.space.x.ghg, 'cm'),
#legend.position = "bottom",
legend.position = c(fig.ghg.leg.x.coord , fig.ghg.leg.y.coord),
legend.margin = margin(.00005,.00005,.00005,0.00005),
legend.box.margin = margin(.00005,.00005,.00005,.00005),
legend.title = element_blank(),
legend.text = element_text(intrag.fig.ghg.leg.text.fs),
axis.title.y = element_text(size =  y.tit.sz, face = "plain"),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
# Panel
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(colour = "black",
fill=NA, size=1))
fig.barintrag.ghgr.t
# Store images for specific tasks
save.image('cocoa_typology.RData')
