# fig.vop.leg.y.coord <- - .55
# p.vop.intra.mg.bottom <- .5
fig.vop.leg.x.coord <- .88
# fig.vop.leg.y.coord <- .8
# intrag.leg.space.x.vop <- 1.16
#intrag.leg.space.y.vop <- .5
fig.bar.intrag.vop.b <- ggplot( data = vop.dat[ !is.na(vop.dat$Typology), ] ,  aes(y = value.mn  , x = Type.str.fill ) )  +
geom_bar( aes(  fill = Revenue.category), position =  position_stack(bar.width) , stat="identity", width = bar.width , colour= NA )+
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd , ymax = tot.value.mn +  tot.value.sd ),  width = error.bar.width , size = error.bar.size , color = vop.error.bar.color
) +
geom_point( aes( y = tot.value.mn ),stat = "identity",  shape = point.type, size = point.size, color = point.color.border , fill = point.color.fill )  +
scale_fill_manual(labels = labels_rev_srcs  , values = colors_rev_srcs )+
xlab('')+
#  ylab(bquote('Value of production (1000 USD  '*ha^-1*' '*yr^-1*')    '))+
# facet_wrap( Typology ~ . ,  ncol = 3, nrow = 1 , scales = "free_x", space = "free")   +
facet_grid( cols = vars(Typology) , scales = "free_x", space = "free_x")   +
scale_y_continuous(
#  limits = c(-0.25, 1.75) ,
breaks = seq(0.0, 2, by = 0.5))+
#  labels = scales::number_format(accuracy = 0.1))  +
coord_cartesian( ylim = c(-0.25, 1.75)) +
# guides(fill = guide_legend(override.aes = list(colour = "gray", size = .392)))+
guides(fill = guide_legend(byrow = TRUE))+
#  guides(fill=guide_legend(ncol=1))+
theme(
plot.margin = unit(c(p.mg.top,p.mg.right, p.mg.bottom ,p.mg.left), "cm"),
axis.ticks.x = element_blank(),
# legend.background = element_rect(fill = '#F7F7F7', size = 0.5, linetype = "solid",  colour = 'black'),
legend.background = element_rect(fill = 'white', size = 0.35, linetype = "solid",  colour = NA),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = x.tick.fs),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# Legend
legend.text = element_text(size = intrag.fig.vop.leg.text.fs),
legend.key.height = unit(intrag.leg.key.h.vop, 'cm'),
legend.key.width = unit(intrag.leg.key.w.vop, 'cm'),
legend.spacing.x = unit(intrag.leg.space.x.vop, 'cm'),
legend.spacing.y = unit(intrag.leg.space.y.vop, 'cm'),
legend.margin = margin(1.1,1.1,1.1,1.1),
legend.key.size = unit(.42, 'cm'),
legend.title =  element_blank(),
legend.position = c(fig.vop.leg.x.coord , fig.vop.leg.y.coord),
#legend.background = element_rect(fill=alpha('white', 0.4)),
#legend.margin = margin(.00005,.00005,.00005,.00005),
##legend.box.margin = margin(.00005,.00005,.00005,.00005),
axis.title.y = element_blank(),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))  #810,320
fig.intrag.yg.b <- ggplot( data= comp[!is.na(comp$typology)   &  !is.na(comp$typ.str)     ,]  ) +
#geom_boxplot(aes(y = yld_pc_attain_plot  , x = typ.str.fill, group = typ.str.fill ), outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 , lwd= fig.yd.bp.thickness , fatten = fig.yd.bp.fatten)+
#  geom_boxplot(aes(y = yld_pc_attain_plot  , x = typ.str, group = typ.str) )+
stat_boxplot(aes(y = yld_pc_attain_plot  , x = typ.str.fill, group = typ.str.fill ), outlier.shape = NA ,  coef = 10 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 , lwd= fig.yd.bp.thickness , fatten = fig.yd.bp.fatten)+
stat_boxplot(aes(y = yld_pc_attain_plot  , x = typ.str.fill, group = typ.str.fill ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width)+
xlab('') +
coord_cartesian( ylim = c(0.0, 100.0)) +
ylab('  Percent attainable yield (%)')+
facet_grid( cols = vars(typology) , scales = "free_x", space = "free_x")   +
# facet_wrap( typology ~ . , ncol =3, nrow = 1, scales = 'free_x' )   +
# scale_x_discrete(labels = comp[!is.na(comp$typology)   &  !is.na(comp$typ.str)   &  !is.na(comp$typ.str.fill)   ,'typ.str.fill'] ) +
theme(
plot.margin = unit(c(p.mg.top,p.mg.right,-.2,p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
#axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0.5, size = x.tick.fs),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y =  element_blank(), #element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size.yd, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.intrag.yd.act.b <- ggplot( data = comp[!is.na(comp$typology)   &  !is.na(comp$typ.str)   &  !is.na(comp$typ.str.fill)   ,]  ) +
geom_boxplot(aes(y = cc.yd.lc.mn.Mg.ha  , x = typ.str.fill , group = typ.str.fill) ,  outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 , lwd= fig.yd.bp.thickness , fatten = fig.yd.bp.fatten )+
stat_boxplot(aes(y = cc.yd.lc.mn.Mg.ha  , x = typ.str.fill, group = typ.str.fill ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width) +
ylab(bquote('Actual yield (Mg  '*ha^-1*' '*yr^-1*')    '))+
# facet_wrap( typology ~ . , ncol =5, nrow = 1 , scales = 'free_x')   +
facet_grid( cols = vars(typology) , scales = "free_x", space = "free_x")   +
# coord_cartesian( ylim = c(0.0, 1.5)) +
scale_y_continuous(breaks = seq(0, 3, by = .5), labels = scales::number_format(accuracy = 0.1))+
theme(
plot.margin = unit(c(p.mg.top,p.mg.right,p.mg.bottom,p.mg.left*.9), "cm"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0.0, size = x.tick.fs),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y =  element_blank(),
strip.text.x = element_text(size =  facet.tx.size.yd, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.intrag.yg <<- annotate_figure(fig.intrag.yg.b ,   fig.lab = "b", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.intrag.yd.act <<- annotate_figure(fig.intrag.yd.act.b ,   fig.lab = "d", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.barintrag.ghgr.t <<-  annotate_figure(fig.barintrag.ghgr.t,   fig.lab = "b", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.bar.intrag.vop  <<- annotate_figure( fig.bar.intrag.vop.b ,   fig.lab = "b", fig.lab.pos ="top.left", fig.lab.size = label.fs)
}
intrag.figs()
interg.figs()
ggsave("fig.vop.pdf",  fig.vop   , path = "Figures.out", width=1250, height=630, units="px", scale=2.5)
ggsave("fig.vop.pdf",  fig.vop   , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.pdf",   fig.ghg     , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.pdf",   fig.ghg     , path = "Figures.out", width=1250, height=630, units="px", scale=2.5)
fig.bar.intergr.ghgr.t.b <- ggplot( data = inter.ghg.ab.dat[,]  )  +
geom_bar(aes(y = value.mn  , x = Typology, fill = Emission.category) , position="stack", stat="identity" , width = fig.interg.ghg.bar.width , colour = NA , size=bar.chart.border.thickness ) +
geom_point(aes(y = tot.value.mn    , x = Typology),stat = "identity",  shape = point.type, size= point.size , color = point.color.border , fill=point.color.fill  , stroke =  point.border.thickness)  +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Typology) , width= error.bar.width , size = error.bar.size , color = error.bar.color
) +
scale_fill_manual(labels = display.names.ab.emission , values = colors_emis_srcs ) +
xlab('') +
ylab('') +
scale_y_continuous(
limits = c( fig.ghg.y.lim.min , fig.ghg.y.lim.max) ,breaks = seq(-8.0, 0, by = 2.0),
labels = scales::number_format(accuracy = 0.1))  +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
ylab(bquote('Net GHG emissions (Mg   '*CO[2]*'eq '*ha^-1*' '*yr^-1*')    '))  +
guides(fill = guide_legend(byrow = TRUE)) +
theme(
legend.text = element_text(size = interg.fig.ghg.leg.text.fs),
plot.margin = unit(c(fig.bar.intergr.ghgr.p.mg.top , p.mg.right , p.mg.interg.ghg.bottom , fig.bar.intergr.ghgr.p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.text.y =  element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = fig.interg.ghg.x.tick.fs ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "none",
axis.title.y = element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
interg.figs <- function(){
# GGPLOT settings
# Legend row spacing
fig.bar.inter.ghg.legend.row.spacing.cm <<- 0.25
fig.bar.inter.nvp.row.spacing.cm <<- 0.25
bar.interg.legend.left.margin <<- 7
bar.interg.legend.right.margin <<- 2
fig.bar.interg.vop.p.mg.bottom <<- 1.3
fig.bar.intergr.ghgr.p.mg.top <<-  p.mg.top
fig.bar.intergr.ghgr.p.mg.left <<- 0.1
fig.bar.intergr.vop.p.mg.top <<-  fig.bar.intergr.ghgr.p.mg.top
fig.bar.intergr.vop.p.mg.left <<-   fig.bar.intergr.ghgr.p.mg.left
p.mg.interg.ghg.bottom <<- 3
p.mg.interg.vop.bottom <<- 2.85
p.mg.interg.yd.bottom <<- 1.25
p.yd.mg.top <<- 0.2
p.yd.mg.right <<- 0.2
p.yd.mg.bottom  <<- 0.05
p.yd.mg.left <<- -.05
interg.leg.key.h.ghg <<- 0.37
interg.leg.key.w.ghg <<- 0.37
interg.leg.key.h.vop <<- 0.47
interg.leg.key.w.vop <<- 0.47
fig.interg.ghg.x.tick.fs <<- x.tick.fs # 11.5
fig.interg.vop.x.tick.fs <<-  fig.interg.ghg.x.tick.fs
fig.interg.ghg.y.tick.fs <<- 9
fig.interg.vop.y.tick.fs <<- 9
fig.interg.ghg.y.tit.fs <<- 11.5
fig.interg.vop.y.tit.fs <<- 11.5
interg.fig.ghg.leg.text.fs <<- 11.5
interg.fig.vop.leg.text.fs <<- 10.0
fig.interg.yg.y.tick.fs <<- 7
fig.interg.yg.y.tit.fs <<- 12.5
fig.interg.yg.x.tick.fs <<-  fig.interg.ghg.x.tick.fs
fig.interg.ghg.bar.width <<- 0.65
fig.interg.vop.bar.width <<- 0.65
fig.interg.yg.bar.width  <<- 0.65
fig.vop.y.lim.min <<-  -0.25
fig.vop.y.lim.max <<- 1.75
fig.vop.leg.x.coord <<- 0.58
fig.vop.leg.y.coord <<- 0.7
fig.bar.intergr.ghgr.t.b <- ggplot( data = inter.ghg.ab.dat[,]  )  +
geom_bar(aes(y = value.mn  , x = Typology, fill = Emission.category) , position="stack", stat="identity" , width = fig.interg.ghg.bar.width , colour = NA , size=bar.chart.border.thickness ) +
geom_point(aes(y = tot.value.mn    , x = Typology),stat = "identity",  shape = point.type, size= point.size , color = point.color.border , fill=point.color.fill  , stroke =  point.border.thickness)  +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Typology) , width= error.bar.width , size = error.bar.size , color = error.bar.color
) +
scale_fill_manual(labels = display.names.ab.emission , values = colors_emis_srcs ) +
xlab('') +
ylab('') +
scale_y_continuous(
limits = c( fig.ghg.y.lim.min , fig.ghg.y.lim.max) ,breaks = seq(-8.0, 0, by = 2.0),
labels = scales::number_format(accuracy = 0.1))  +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
ylab(bquote('Net GHG emissions (Mg   '*CO[2]*'eq '*ha^-1*' '*yr^-1*')    '))  +
guides(fill = guide_legend(byrow = TRUE)) +
theme(
legend.text = element_text(size = interg.fig.ghg.leg.text.fs),
plot.margin = unit(c(fig.bar.intergr.ghgr.p.mg.top , p.mg.right , p.mg.interg.ghg.bottom , fig.bar.intergr.ghgr.p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.text.y =  element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = fig.interg.ghg.x.tick.fs ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "none",
axis.title.y = element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
fig.bar.interg.vop.b <- ggplot( data = interg.vop.dat[]  )  +
geom_bar(aes(y = value.mn  , x = Typology, fill = Revenue.category) , position="stack", stat="identity" , width = fig.interg.vop.bar.width, colour = NA , size = bar.chart.border.thickness) +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Typology) ,     width = error.bar.width , size = error.bar.size , color = vop.error.bar.color  ) +
geom_point(aes(y = tot.value.mn    , x = Typology) , stat = "identity",  shape = point.type, size = point.size , color = point.color.border , fill = point.color.fill ,   stroke =  point.border.thickness)  +
scale_fill_manual(labels = labels_rev_srcs  , values = colors_rev_srcs) +
xlab('') +
ylab('') +
scale_y_continuous(
limits = c(-0.25, 1.75) ,breaks = seq(0.0, 2, by = 0.5))+
guides(fill = guide_legend(byrow = TRUE)) +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
ylab(bquote('Value of production (1000 USD  '*ha^-1*' '*yr^-1*')    ')) +
theme(
plot.margin = unit(c(fig.bar.intergr.vop.p.mg.top , p.mg.right ,   p.mg.interg.vop.bottom , fig.bar.intergr.vop.p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = fig.interg.ghg.x.tick.fs) ,
axis.text.y =  element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.text = element_text(size = intrag.fig.vop.leg.text.fs),
legend.key.height = unit(intrag.leg.key.h.vop, 'cm'),
legend.key.width = unit(intrag.leg.key.w.vop, 'cm'),
legend.spacing.x = unit(intrag.leg.space.x.vop, 'cm'),
legend.spacing.y = unit(intrag.leg.space.y.vop, 'cm'),
legend.position = "none",
legend.title =  element_blank(),
legend.background = element_rect(fill=alpha('white', 0.4)),
legend.margin = margin(.00005,.00005,.00005,.00005),
legend.box.margin = margin(.00005,.00005,.00005,.00005),
axis.title.y = element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
fig.interg.yg.b <- ggplot( data= comp[ !is.na(comp$typology) &  !(comp$hhID %in%  hh_exclude.cc.yd.typ )   &  !is.na(comp$typology)    & !is.na(comp$yld_pc_attain_plot) ,]) +
stat_boxplot(aes(y = yld_pc_attain_plot  , x = typology, group = typology ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width)+
geom_boxplot(aes(y = yld_pc_attain_plot  , x = typology, group = typology), width = fig.interg.yg.bar.width , outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 ,  lwd= fig.yd.bp.thickness , fatten = fig.yd.bp.fatten )+
xlab('') +
ylab('')+
coord_cartesian(ylim=c(0, 100.0)) +
scale_y_continuous(limits = c(0.0, 100.0) ,breaks = seq(0, 100, by = 25), labels = scales::number_format(accuracy = 1.0))+
# scale_y_continuous( labels = scales::number_format(accuracy = 0.1))+
ylab('  Percent attainable yield (%)')+
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
theme(
plot.margin = unit(c( p.yd.mg.top , p.yd.mg.right , -.25 , .2 ), "cm"),
#  axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_blank(),
#  axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0.5, size = fig.interg.yg.x.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y = element_text(size =   fig.interg.yg.y.tit.fs ), #, #element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size.yd, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.interg.yd.act.b <- ggplot( data= comp[ !is.na(comp$typology) &  !(comp$hhID %in%  hh_exclude.cc.yd.typ )   &  !is.na(comp$typology)    & !is.na(comp$cc.yd.lt.mn.Mg.ha) ,]) +
geom_boxplot(aes(y = cc.yd.lc.mn.Mg.ha   , x = typology, group = typology), width = fig.interg.yg.bar.width ,  outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 ,  lwd= fig.yd.bp.thickness ,  fatten = fig.yd.bp.fatten)+
stat_boxplot(aes(y = cc.yd.lc.mn.Mg.ha   , x = typology, group = typology ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width)+
xlab('') +
ylab('') +
coord_cartesian(ylim=c(0,  1.5)) +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
scale_y_continuous( labels = scales::number_format(accuracy = 0.01))+
ylab(bquote('Actual yield (Mg  '*ha^-1*' '*yr^-1*')    '))+
theme(
plot.margin = unit(c(p.yd.mg.top,p.yd.mg.right,p.mg.interg.yd.bottom ,p.yd.mg.left), "cm"),
axis.ticks.x = element_blank(),
# axis.ticks.y = element_blank(),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0, size = fig.interg.yg.x.tick.fs ),
# axis.text.x = element_blank(),
# axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = fig.interg.yg.y.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y = element_text(size =    fig.interg.yg.y.tit.fs ),
strip.text.x = element_text(size =  facet.tx.size.yd , color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.interg.yg <<- annotate_figure( fig.interg.yg.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.interg.yd.act <<-  annotate_figure( fig.interg.yd.act.b,   fig.lab = "c", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.bar.intergr.ghgr.t <<- annotate_figure( fig.bar.intergr.ghgr.t.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.bar.interg.vop <<- annotate_figure(fig.bar.interg.vop.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.yd   <<- plot_grid(    fig.interg.yg ,
fig.intrag.yg ,
fig.interg.yd.act,
fig.intrag.yd.act ,
align = "h",
nrow = 2,
ncol = 2 ,
rel_widths = c(26/100, 74/100),
rel_heights = c(38/100, 62/100))
fig.vop   <<- plot_grid(   fig.bar.interg.vop,
fig.bar.intrag.vop ,
align = "h",
nrow = 1,
ncol = 2 ,
rel_widths = c(24/100, 76/100))
fig.ghg   <<- plot_grid(  fig.bar.intergr.ghgr.t,
fig.barintrag.ghgr.t  ,
align = "h",
nrow = 1,
ncol = 2 ,
rel_widths = c(24/100, 76/100))
ggsave("fig.yd.pdf",   fig.yd    , path = "Figures.out", width=1000, height=610, units="px", scale=2.5)
ggsave("fig.vop.pdf",  fig.vop   , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.pdf",   fig.ghg     , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.jpeg",  fig.ghg  , path = "Figures.out", width=1250, height= 600, units="px", scale=2.5)
ggsave("fig.vop.jpeg",  fig.vop  , path = "Figures.out", width=1250, height= 600, units="px", scale=2.5)
}
interg.figs()
interg.figs <- function(){
# GGPLOT settings
# Legend row spacing
fig.bar.inter.ghg.legend.row.spacing.cm <<- 0.25
fig.bar.inter.nvp.row.spacing.cm <<- 0.25
bar.interg.legend.left.margin <<- 7
bar.interg.legend.right.margin <<- 2
fig.bar.interg.vop.p.mg.bottom <<- 1.3
fig.bar.intergr.ghgr.p.mg.top <<-  p.mg.top
fig.bar.intergr.ghgr.p.mg.left <<- 0.1
fig.bar.intergr.vop.p.mg.top <<-  fig.bar.intergr.ghgr.p.mg.top
fig.bar.intergr.vop.p.mg.left <<-   fig.bar.intergr.ghgr.p.mg.left
p.mg.interg.ghg.bottom <<- 3
p.mg.interg.vop.bottom <<- 2.85
p.mg.interg.yd.bottom <<- 1.25
p.yd.mg.top <<- 0.2
p.yd.mg.right <<- 0.2
p.yd.mg.bottom  <<- 0.05
p.yd.mg.left <<- -.05
interg.leg.key.h.ghg <<- 0.37
interg.leg.key.w.ghg <<- 0.37
interg.leg.key.h.vop <<- 0.47
interg.leg.key.w.vop <<- 0.47
fig.interg.ghg.x.tick.fs <<- x.tick.fs # 11.5
fig.interg.vop.x.tick.fs <<-  fig.interg.ghg.x.tick.fs
fig.interg.ghg.y.tick.fs <<- 9
fig.interg.vop.y.tick.fs <<- 9
fig.interg.ghg.y.tit.fs <<- 11.5
fig.interg.vop.y.tit.fs <<- 11.5
interg.fig.ghg.leg.text.fs <<- 11.5
interg.fig.vop.leg.text.fs <<- 10.0
fig.interg.yg.y.tick.fs <<- 7
fig.interg.yg.y.tit.fs <<- 12.5
fig.interg.yg.x.tick.fs <<-  fig.interg.ghg.x.tick.fs
fig.interg.ghg.bar.width <<- 0.65
fig.interg.vop.bar.width <<- 0.65
fig.interg.yg.bar.width  <<- 0.65
fig.vop.y.lim.min <<-  -0.25
fig.vop.y.lim.max <<- 1.75
fig.vop.leg.x.coord <<- 0.58
fig.vop.leg.y.coord <<- 0.7
fig.bar.intergr.ghgr.t.b <- ggplot( data = inter.ghg.ab.dat[,]  )  +
geom_bar(aes(y = value.mn  , x = Typology, fill = Emission.category) , position="stack", stat="identity" , width = fig.interg.ghg.bar.width , colour = NA , size=bar.chart.border.thickness ) +
geom_point(aes(y = tot.value.mn    , x = Typology),stat = "identity",  shape = point.type, size= point.size , color = point.color.border , fill=point.color.fill  , stroke =  point.border.thickness)  +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Typology) , width= error.bar.width , size = error.bar.size , color = error.bar.color
) +
scale_fill_manual(labels = display.names.ab.emission , values = colors_emis_srcs ) +
xlab('') +
ylab('') +
scale_y_continuous(
limits = c( fig.ghg.y.lim.min , fig.ghg.y.lim.max) ,breaks = seq(-8.0, 0, by = 2.0),
labels = scales::number_format(accuracy = 0.1))  +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
ylab(bquote('Net GHG emissions (Mg   '*CO[2]*'eq '*ha^-1*' '*yr^-1*')     '))  +
guides(fill = guide_legend(byrow = TRUE)) +
theme(
legend.text = element_text(size = interg.fig.ghg.leg.text.fs),
plot.margin = unit(c(fig.bar.intergr.ghgr.p.mg.top , p.mg.right , p.mg.interg.ghg.bottom , fig.bar.intergr.ghgr.p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.text.y =  element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = fig.interg.ghg.x.tick.fs ),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "none",
axis.title.y = element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
fig.bar.interg.vop.b <- ggplot( data = interg.vop.dat[]  )  +
geom_bar(aes(y = value.mn  , x = Typology, fill = Revenue.category) , position="stack", stat="identity" , width = fig.interg.vop.bar.width, colour = NA , size = bar.chart.border.thickness) +
geom_errorbar(aes(ymin = tot.value.mn -  tot.value.sd, ymax = tot.value.mn +  tot.value.sd , x = Typology) ,     width = error.bar.width , size = error.bar.size , color = vop.error.bar.color  ) +
geom_point(aes(y = tot.value.mn    , x = Typology) , stat = "identity",  shape = point.type, size = point.size , color = point.color.border , fill = point.color.fill ,   stroke =  point.border.thickness)  +
scale_fill_manual(labels = labels_rev_srcs  , values = colors_rev_srcs) +
xlab('') +
ylab('') +
scale_y_continuous(
limits = c(-0.25, 1.75) ,breaks = seq(0.0, 2, by = 0.5))+
guides(fill = guide_legend(byrow = TRUE)) +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
ylab(bquote('Value of production (1000 USD  '*ha^-1*' '*yr^-1*')    ')) +
theme(
plot.margin = unit(c(fig.bar.intergr.vop.p.mg.top , p.mg.right ,   p.mg.interg.vop.bottom , fig.bar.intergr.vop.p.mg.left), "cm"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = x.tick.angle, vjust = 0.5, hjust=0.0, size = fig.interg.ghg.x.tick.fs) ,
axis.text.y =  element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.text = element_text(size = intrag.fig.vop.leg.text.fs),
legend.key.height = unit(intrag.leg.key.h.vop, 'cm'),
legend.key.width = unit(intrag.leg.key.w.vop, 'cm'),
legend.spacing.x = unit(intrag.leg.space.x.vop, 'cm'),
legend.spacing.y = unit(intrag.leg.space.y.vop, 'cm'),
legend.position = "none",
legend.title =  element_blank(),
legend.background = element_rect(fill=alpha('white', 0.4)),
legend.margin = margin(.00005,.00005,.00005,.00005),
legend.box.margin = margin(.00005,.00005,.00005,.00005),
axis.title.y = element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
fig.interg.yg.b <- ggplot( data= comp[ !is.na(comp$typology) &  !(comp$hhID %in%  hh_exclude.cc.yd.typ )   &  !is.na(comp$typology)    & !is.na(comp$yld_pc_attain_plot) ,]) +
stat_boxplot(aes(y = yld_pc_attain_plot  , x = typology, group = typology ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width)+
geom_boxplot(aes(y = yld_pc_attain_plot  , x = typology, group = typology), width = fig.interg.yg.bar.width , outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 ,  lwd= fig.yd.bp.thickness , fatten = fig.yd.bp.fatten )+
xlab('') +
ylab('')+
coord_cartesian(ylim=c(0, 100.0)) +
scale_y_continuous(limits = c(0.0, 100.0) ,breaks = seq(0, 100, by = 25), labels = scales::number_format(accuracy = 1.0))+
# scale_y_continuous( labels = scales::number_format(accuracy = 0.1))+
ylab('  Percent attainable yield (%)')+
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
theme(
plot.margin = unit(c( p.yd.mg.top , p.yd.mg.right , -.25 , .2 ), "cm"),
#  axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_blank(),
#  axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0.5, size = fig.interg.yg.x.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y = element_text(size =   fig.interg.yg.y.tit.fs ), #, #element_text(size =  y.tit.sz),
strip.text.x = element_text(size =  facet.tx.size.yd, color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.interg.yd.act.b <- ggplot( data= comp[ !is.na(comp$typology) &  !(comp$hhID %in%  hh_exclude.cc.yd.typ )   &  !is.na(comp$typology)    & !is.na(comp$cc.yd.lt.mn.Mg.ha) ,]) +
geom_boxplot(aes(y = cc.yd.lc.mn.Mg.ha   , x = typology, group = typology), width = fig.interg.yg.bar.width ,  outlier.shape = NA, coef = 5 , color = box.plot.color, fill = box.plot.fill.color , alpha= 0.5 ,  lwd= fig.yd.bp.thickness ,  fatten = fig.yd.bp.fatten)+
stat_boxplot(aes(y = cc.yd.lc.mn.Mg.ha   , x = typology, group = typology ), geom = 'errorbar' , coef = 10 , color = box.plot.color,  alpha= 5 , lwd= fig.yd.bp.thickness , width = box.error.bar.width)+
xlab('') +
ylab('') +
coord_cartesian(ylim=c(0,  1.5)) +
facet_wrap(  facet.lab ~ . , ncol = 1, nrow = 1 , scales = "free_x")   +
scale_y_continuous( labels = scales::number_format(accuracy = 0.01))+
ylab(bquote('Actual yield (Mg  '*ha^-1*' '*yr^-1*')    '))+
theme(
plot.margin = unit(c(p.yd.mg.top,p.yd.mg.right,p.mg.interg.yd.bottom ,p.yd.mg.left), "cm"),
axis.ticks.x = element_blank(),
# axis.ticks.y = element_blank(),
axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = y.tick.fs),
axis.text.x = element_text(angle = x.tick.angle , vjust = 0.5, hjust=0, size = fig.interg.yg.x.tick.fs ),
# axis.text.x = element_blank(),
# axis.text.y = element_text(vjust = 0.5, hjust=0.5, size = fig.interg.yg.y.tick.fs),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y = element_text(size =    fig.interg.yg.y.tit.fs ),
strip.text.x = element_text(size =  facet.tx.size.yd , color = 'black'),
strip.background = element_rect(color='black', fill='white', size=1.0, linetype="solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
fig.interg.yg <<- annotate_figure( fig.interg.yg.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.interg.yd.act <<-  annotate_figure( fig.interg.yd.act.b,   fig.lab = "c", fig.lab.pos ="top.left", fig.lab.size = label.fs )
fig.bar.intergr.ghgr.t <<- annotate_figure( fig.bar.intergr.ghgr.t.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.bar.interg.vop <<- annotate_figure(fig.bar.interg.vop.b,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.yd   <<- plot_grid(    fig.interg.yg ,
fig.intrag.yg ,
fig.interg.yd.act,
fig.intrag.yd.act ,
align = "h",
nrow = 2,
ncol = 2 ,
rel_widths = c(26/100, 74/100),
rel_heights = c(38/100, 62/100))
fig.vop   <<- plot_grid(   fig.bar.interg.vop,
fig.bar.intrag.vop ,
align = "h",
nrow = 1,
ncol = 2 ,
rel_widths = c(24/100, 76/100))
fig.ghg   <<- plot_grid(  fig.bar.intergr.ghgr.t,
fig.barintrag.ghgr.t  ,
align = "h",
nrow = 1,
ncol = 2 ,
rel_widths = c(24/100, 76/100))
ggsave("fig.yd.pdf",   fig.yd    , path = "Figures.out", width=1000, height=610, units="px", scale=2.5)
ggsave("fig.vop.pdf",  fig.vop   , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.pdf",   fig.ghg     , path = "Figures.out", width=1250, height=600, units="px", scale=2.5)
ggsave("fig.ghg.jpeg",  fig.ghg  , path = "Figures.out", width=1250, height= 600, units="px", scale=2.5)
ggsave("fig.vop.jpeg",  fig.vop  , path = "Figures.out", width=1250, height= 600, units="px", scale=2.5)
}
interg.figs()
